<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springmvc.dao.SensorDataMapper" >
  <resultMap id="BaseResultMap" type="com.springmvc.entity.SensorData" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="direction" property="direction" jdbcType="INTEGER" />
    <result column="springkler_s_id" property="springklerSId" jdbcType="INTEGER" />
    <result column="r_time" property="rTime" jdbcType="TIMESTAMP" />
    <result column="t_data" property="tData" jdbcType="CHAR" />
    <result column="h_data" property="hData" jdbcType="CHAR" />
    <result column="s_data" property="sData" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, direction, springkler_s_id, r_time, t_data, h_data, s_data
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sensor_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from sensor_data
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sensor_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springmvc.entity.SensorData" >
    insert into sensor_data (id, direction, springkler_s_id, 
      r_time, t_data, h_data, s_data
      )
    values (#{id,jdbcType=INTEGER}, #{direction,jdbcType=INTEGER}, #{springklerSId,jdbcType=INTEGER}, 
      #{rTime,jdbcType=TIMESTAMP}, #{tData,jdbcType=CHAR}, #{hData,jdbcType=CHAR}, #{sData,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.springmvc.entity.SensorData" >
    insert into sensor_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="direction != null" >
        direction,
      </if>
      <if test="springklerSId != null" >
        springkler_s_id,
      </if>
      <if test="rTime != null" >
        r_time,
      </if>
      <if test="tData != null" >
        t_data,
      </if>
      <if test="hData != null" >
        h_data,
      </if>
      <if test="sData != null" >
        s_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="direction != null" >
        #{direction,jdbcType=INTEGER},
      </if>
      <if test="springklerSId != null" >
        #{springklerSId,jdbcType=INTEGER},
      </if>
      <if test="rTime != null" >
        #{rTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tData != null" >
        #{tData,jdbcType=CHAR},
      </if>
      <if test="hData != null" >
        #{hData,jdbcType=CHAR},
      </if>
      <if test="sData != null" >
        #{sData,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.entity.SensorData" >
    update sensor_data
    <set >
      <if test="direction != null" >
        direction = #{direction,jdbcType=INTEGER},
      </if>
      <if test="springklerSId != null" >
        springkler_s_id = #{springklerSId,jdbcType=INTEGER},
      </if>
      <if test="rTime != null" >
        r_time = #{rTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tData != null" >
        t_data = #{tData,jdbcType=CHAR},
      </if>
      <if test="hData != null" >
        h_data = #{hData,jdbcType=CHAR},
      </if>
      <if test="sData != null" >
        s_data = #{sData,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springmvc.entity.SensorData" >
    update sensor_data
    set direction = #{direction,jdbcType=INTEGER},
      springkler_s_id = #{springklerSId,jdbcType=INTEGER},
      r_time = #{rTime,jdbcType=TIMESTAMP},
      t_data = #{tData,jdbcType=CHAR},
      h_data = #{hData,jdbcType=CHAR},
      s_data = #{sData,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>